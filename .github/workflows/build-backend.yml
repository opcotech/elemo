name: Build backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Go CI Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          args: --timeout 5m

  unit-test:
    runs-on: "ubuntu-latest"
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Execute unit tests
        run: make test.backend.unit
      - name: Stash test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: "unit-test-results"
          path: .coverage.unit.out
          include-hidden-files: true
          retention-days: 7

  benchmark-test:
    runs-on: "ubuntu-latest"
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Execute integration tests
        run: make test.backend.bench

  integration-test:
    runs-on: "ubuntu-latest"
    needs:
      - unit-test
      - benchmark-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Execute integration tests
        run: make test.backend.integration
      - name: Stash test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: "integration-test-results"
          path: .coverage.integration.out
          include-hidden-files: true
          retention-days: 7

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    needs:
      - integration-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "^1.22"
      - name: Unstash unit test results
        uses: actions/download-artifact@v4
        with:
          name: "unit-test-results"
      - name: Unstash integration test results
        uses: actions/download-artifact@main
        with:
          name: "integration-test-results"
      - name: Combine coverage reports
        run: make test.backend.coverage
      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          files: .coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: opcotech/elemo
          fail_ci_if_error: true
