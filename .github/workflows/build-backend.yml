name: Build Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: "ubuntu-latest"
    env:
      GO111MODULE: on
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - uses: ./.github/actions/generate
      - name: Go CI Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 5m

  unit-test:
    runs-on: "ubuntu-latest"
    needs:
      - lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - uses: ./.github/actions/generate
      - name: Execute unit tests
        run: make test.unit
      - name: Stash test results
        uses: actions/upload-artifact@master
        with:
          name: "unit-test-results"
          path: .coverage.unit.out
          retention-days: 7

  integration-test:
    runs-on: "ubuntu-latest"
    needs:
      - unit-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - uses: ./.github/actions/generate
      - name: Execute integration tests
        run: make test.integration
      - name: Stash test results
        uses: actions/upload-artifact@master
        with:
          name: "integration-test-results"
          path: .coverage.integration.out
          retention-days: 7

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    needs:
      - integration-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "^1.20"
      - name: Unstash unit test results
        uses: actions/download-artifact@master
        with:
          name: "unit-test-results"
      - name: Unstash integration test results
        uses: actions/download-artifact@master
        with:
          name: "integration-test-results"
      - uses: ./.github/actions/generate
      - name: Upload test results
        uses: paambaati/codeclimate-action@v4.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
        with:
          coverageCommand: make coverage.combine
          prefix: github.com/${{github.repository}}
          coverageLocations: ${{github.workspace}}/.coverage.out:gocov
